class Solution {
public:
    string smallestSubsequence(string s) {
        vector<bool> visited(26,false);
        vector<int> lastIndex(26,0);
        for(int i=0;i<s.size();i++){
            lastIndex[s[i]-'a']=i;
        }
        stack<char> st;
        for(int i=0;i<s.size();i++){
            int curr=s[i]-'a';
            if(visited[curr]){
                continue;
            }
            while(!st.empty()&&i<lastIndex[st.top()-'a']&&st.top()>s[i]){
                visited[st.top()-'a']=false;
                st.pop();
            }
            st.push(s[i]);
            visited[curr]=true;
        }
        string ans="";
        while(!st.empty()){
            ans+=st.top();
            st.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;        
    }
};s