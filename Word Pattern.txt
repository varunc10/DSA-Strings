class Solution {
public:
    bool wordPattern(string pattern, string s) {
        unordered_map<string,char> m;
        int i=0;
        int j=0;
        int count=0;
        for(int i=0;i<s.size();i++){
            if(s[i]==' '){
                count++;
            }
        }
        if(pattern.size()!=count+1){
            return false;
        }
        while(i<s.size()&&j<pattern.size()){
            string str="";
            while(s[i]!=' '&&i<s.size()){
                str+=s[i];
                i++;
            }
            auto it=m.find(str);
            if(it!=m.end()){
                if(it->second!=pattern[j]){
                    return false;
                }
            }
            else{
                m.insert({str,pattern[j]});
            }
            i++;
            j++;
        }
        set<char> s1(pattern.begin(),pattern.end());
        if(s1.size()!=m.size()){
            return false;
        }
        return true;
    }
};