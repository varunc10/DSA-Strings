class Solution {
public:
    void helper(vector<int>&nums,vector<vector<int>>&ans,vector<int>& v,int i){
        ans.push_back(v);
        for(int j=i;j<nums.size();j++){
            v.push_back(nums[j]);
            helper(nums,ans,v,j+1);
            v.pop_back();
        }
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> ans;
        vector<int> v;
        sort(nums.begin(),nums.end());
        helper(nums,ans,v,0);
        map<vector<int>,int> m;
        vector<vector<int>> ans1;
        for(int i=0;i<ans.size();i++){
            m[ans[i]]++;
        }
        for(auto p:m){
            ans1.push_back(p.first);
        }
        return ans1;
    }
};